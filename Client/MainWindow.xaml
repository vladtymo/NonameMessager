<Window x:Class="Client.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:res="clr-namespace:Client.Properties"
        xmlns:local="clr-namespace:Client"
          xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes" xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
        mc:Ignorable="d"
        Title="MainWindow" Height="550" Width="800"
           TextElement.FontSize="15" TextBlock.FontSize="15" >
    <Window.Resources>
        <ResourceDictionary>
            <Style BasedOn="{StaticResource MaterialDesignTextBox}" TargetType="TextBox">
                <Setter Property="CaretBrush" Value="{StaticResource PrimaryHueMidBrush}"></Setter>
            </Style>

            <Style x:Key="ErrorTextBoxStyle"  BasedOn="{StaticResource MaterialDesignFloatingHintTextBox}" TargetType="TextBox">

                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="true">
                        <Setter Property="materialDesign:HintAssist.HelperText"    
                                                            Value="{Binding RelativeSource={RelativeSource Self}    
                                                            , Path=(Validation.Errors)[0].ErrorContent}" />
                        <Setter Property="Foreground" Value="{StaticResource MaterialDesignValidationErrorBrush}"></Setter>
                        
                        <Setter Property="materialDesign:TextFieldAssist.HasTrailingIcon" Value="True"></Setter>
                        <Setter Property="materialDesign:TextFieldAssist.TrailingIcon" Value="ExclamationThick"></Setter>

                    </Trigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closed">
            <i:InvokeCommandAction Command="{Binding ClosedCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Window.Style>
        <Style TargetType="Window">
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=loginDialogHost, Path=IsOpen}" Value="True">
                    <Setter Property="IsEnabled" Value="False"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding ElementName=loginDialogHost, Path=IsOpen}" Value="False">
                    <Setter Property="IsEnabled" Value="True"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding ElementName=editProfileDialog, Path=IsOpen}" Value="True">
                    <Setter Property="IsEnabled" Value="False"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding ElementName=contactsDialog, Path=IsOpen}" Value="True">
                    <Setter Property="IsEnabled" Value="False"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding ElementName=addEditChatDialog, Path=IsOpen}" Value="True">
                    <Setter Property="IsEnabled" Value="False"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding ElementName=joinChatDialog, Path=IsOpen}" Value="True">
                    <Setter Property="IsEnabled" Value="False"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding ElementName=chatProfileDialog, Path=IsOpen}" Value="True">
                    <Setter Property="IsEnabled" Value="False"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding ElementName=chatViewChatInfoDialog, Path=IsOpen}" Value="True">
                    <Setter Property="IsEnabled" Value="False"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding ElementName=inviteContactDialog, Path=IsOpen}" Value="True">
                    <Setter Property="IsEnabled" Value="False"></Setter>
                </DataTrigger>

            </Style.Triggers>
        </Style>
    </Window.Style>
    <Grid>

        <!--_______________________Left panel____________________-->

        <materialDesign:DrawerHost  HorizontalAlignment="Stretch" 
                VerticalAlignment="Stretch"
                BorderThickness="0"
                BorderBrush="{DynamicResource MaterialDesignDivider}" Margin="0" >
            <materialDesign:DrawerHost.Style>
                <Style TargetType="materialDesign:DrawerHost">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=loginDialogHost, Path=IsOpen}" Value="True">
                            <Setter Property="IsLeftDrawerOpen" Value="False"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=editProfileDialog, Path=IsOpen}" Value="True">
                            <Setter Property="IsLeftDrawerOpen" Value="False"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=contactsDialog, Path=IsOpen}" Value="True">
                            <Setter Property="IsLeftDrawerOpen" Value="False"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=addEditChatDialog, Path=IsOpen}" Value="True">
                            <Setter Property="IsLeftDrawerOpen" Value="False"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=joinChatDialog, Path=IsOpen}" Value="True">
                            <Setter Property="IsLeftDrawerOpen" Value="False"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=chatProfileDialog, Path=IsOpen}" Value="True">
                            <Setter Property="IsLeftDrawerOpen" Value="False"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=chatViewChatInfoDialog, Path=IsOpen}" Value="True">
                            <Setter Property="IsLeftDrawerOpen" Value="False"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=inviteContactDialog, Path=IsOpen}" Value="True">
                            <Setter Property="IsLeftDrawerOpen" Value="False"></Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </materialDesign:DrawerHost.Style>

            <materialDesign:DrawerHost.LeftDrawerContent >

                <StackPanel Width="275" >
                    <Border Height="80" Background="{DynamicResource PrimaryHueMidBrush }" TextBlock.Foreground="{StaticResource MaterialDesignBackground}">
                        <Grid Margin="10,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                <ColumnDefinition></ColumnDefinition>

                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>


                                <RowDefinition></RowDefinition>
                                <RowDefinition></RowDefinition>
                                <RowDefinition></RowDefinition>
                                <RowDefinition></RowDefinition>

                                <RowDefinition></RowDefinition>
                                <RowDefinition></RowDefinition>


                            </Grid.RowDefinitions>
                            <Ellipse Width="50" Height="50" Margin="10,0" Grid.RowSpan="4" Grid.Row="1">
                                <Ellipse.Fill>
                                    <ImageBrush ImageSource="{Binding CurrentClient.Photo}" Stretch="UniformToFill"/>
                                </Ellipse.Fill>
                            </Ellipse>

                            <TextBlock Grid.Column="1"  Grid.RowSpan="3" Margin="5,0"  TextAlignment="Left" TextWrapping="Wrap" VerticalAlignment="Bottom" Text="{Binding CurrentClient.Name}"></TextBlock>
                            <TextBlock Grid.Column="1" Grid.Row="3" Margin="5,0" Grid.RowSpan="2" VerticalAlignment="Bottom"  TextAlignment="Left" Text="{Binding CurrentClient.Account.Phone}"></TextBlock>
                        </Grid>
                    </Border>

                    <!--Edit profile button-->
                    <Button Style="{StaticResource MaterialDesignFlatButton}"  HorizontalContentAlignment="Stretch"  Margin="5" Command="{Binding SetProfileDialogOpenCommand}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                <ColumnDefinition></ColumnDefinition>


                            </Grid.ColumnDefinitions>
                            <materialDesign:PackIcon 
                                 Kind="AccountEditOutline"
                                 Height="24"
                                 Width="24" />

                            <TextBlock Grid.Column="2" Margin="15,0"   VerticalAlignment="Center" Text="{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.LeftPanelEditProfileButtonString, Mode=OneWay}"></TextBlock>
                        </Grid>
                    </Button>
                    <!--Contacts button-->
                    <Button Style="{StaticResource MaterialDesignFlatButton}"  HorizontalContentAlignment="Stretch"  Margin="5" TextBlock.FontSize="15" Command="{Binding ContactsDialogOpenCommand}">

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                <ColumnDefinition></ColumnDefinition>


                            </Grid.ColumnDefinitions>
                            <materialDesign:PackIcon 
                                 Kind="AccountBoxOutline"
                                 Height="24"
                                 Width="24" />

                            <TextBlock Grid.Column="2" Margin="15,0"  VerticalAlignment="Center" Text="{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.LeftPanelContactsButtonString, Mode=OneWay}"></TextBlock>
                        </Grid>

                    </Button>
                    <!--New chat button-->
                    <Button Style="{StaticResource MaterialDesignFlatButton}"  HorizontalContentAlignment="Stretch"  Margin="5" TextBlock.FontSize="15" Command="{Binding ChatAddDialogOpenCommand}">

                        <Grid >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                <ColumnDefinition></ColumnDefinition>


                            </Grid.ColumnDefinitions>
                            <materialDesign:PackIcon 
                                 Kind="ChatPlusOutline"
                                 Height="24"
                                 Width="24" />
                            <TextBlock Grid.Column="2" Margin="15,0"   VerticalAlignment="Center" Text="{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.LeftPanelNewChatButtonString, Mode=OneWay}"></TextBlock>
                        </Grid>
                    </Button>
                    <!--Join to chat button-->
                    <Button Style="{StaticResource MaterialDesignFlatButton}"  HorizontalContentAlignment="Stretch"  Margin="5" TextBlock.FontSize="15" Command="{Binding JoinToChatDialogOpenCommand}">

                        <Grid >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                <ColumnDefinition></ColumnDefinition>


                            </Grid.ColumnDefinitions>
                            <materialDesign:PackIcon 
                                 Kind="ForumOutline"
                                 Height="24"
                                 Width="24" />
                            <TextBlock Grid.Column="2" Margin="15,0"   VerticalAlignment="Center" Text="{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.LeftPanelJoinToChatButtonString, Mode=OneWay}"></TextBlock>
                        </Grid>
                    </Button>
                    <!--Change language comboBox-->
                    <Grid Margin="22,5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                            <ColumnDefinition></ColumnDefinition>


                        </Grid.ColumnDefinitions>

                        <materialDesign:PackIcon 
                                 Kind="Translate"
                                 Height="24"
                                 Width="24" Foreground="{StaticResource PrimaryHueMidBrush}"/>
                        <ComboBox Grid.Column="1" Margin="15,0" Width="100" HorizontalAlignment="Left" Foreground="{StaticResource PrimaryHueMidBrush}"
                        materialDesign:HintAssist.Hint="{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.LanguageString, Mode=OneWay}" 
                                  ItemsSource="{Binding Languages}" SelectedItem="{Binding SelectedLanguage}" DisplayMemberPath="Name"></ComboBox>



                    </Grid>
                    <!--Exit button-->
                    <Button Style="{StaticResource MaterialDesignFlatButton}"  HorizontalContentAlignment="Stretch"  Margin="5" TextBlock.FontSize="15" Command="{Binding ExitCommand}">

                        <Grid >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                <ColumnDefinition></ColumnDefinition>


                            </Grid.ColumnDefinitions>
                            <materialDesign:PackIcon 
                                 Kind="ExitToApp"
                                 Height="24"
                                 Width="24" />

                            <TextBlock Grid.Column="2" Margin="15,0"   VerticalAlignment="Center" Text="{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.LeftPanelExitButtonString, Mode=OneWay}"></TextBlock>
                        </Grid>

                    </Button>


                </StackPanel>
            </materialDesign:DrawerHost.LeftDrawerContent>


            <!--Window-->
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" MinWidth="200" ></ColumnDefinition>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                    <ColumnDefinition Width="*" MinWidth="400"></ColumnDefinition>

                </Grid.ColumnDefinitions>
                <GridSplitter Grid.Column="1" ShowsPreview="False" Width="3" VerticalAlignment="Stretch" HorizontalAlignment="Center"></GridSplitter>



                <!--Login and Sign up dialog-->
                <materialDesign:DialogHost Grid.Column="1" Name="loginDialogHost"
                         HorizontalAlignment="Center" 
                            VerticalAlignment="Center" DialogTheme="Light" IsOpen="{Binding IsOpenLoginRegistrationDialog}" >
                    <materialDesign:DialogHost.DialogContent>
                        <Grid>
                            <materialDesign:Flipper  Style="{StaticResource MaterialDesignCardFlipper}"   >
                                <!--Login-->
                                <materialDesign:Flipper.FrontContent>
                                    <Grid  Width="200" Height="220" Margin="20,10" >
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition></ColumnDefinition>
                                            <ColumnDefinition Width="Auto"></ColumnDefinition>

                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"></RowDefinition>
                                            <RowDefinition Height="Auto"></RowDefinition>
                                            <RowDefinition Height="Auto"></RowDefinition>
                                            <RowDefinition></RowDefinition>
                                            <RowDefinition></RowDefinition>

                                        </Grid.RowDefinitions>

                                        <TextBlock FontSize="24" HorizontalAlignment="Center"  Grid.ColumnSpan="2" VerticalAlignment="Bottom" Margin="5" Foreground="{StaticResource PrimaryHueMidBrush}" Text="{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.LoginDialogHeaderLoginString, Mode=OneWay}"></TextBlock>

                                        <TextBox Grid.Row="1"  VerticalAlignment="Bottom" Grid.ColumnSpan="2" Margin="5,10" Text="{Binding CurrentClient.Account.Email,UpdateSourceTrigger=PropertyChanged}" >
                                            <materialDesign:HintAssist.Hint>
                                                <TextBlock >
                                        <Run Text="{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.EmailString, Mode=OneWay}"></Run><Run>/</Run><Run Text="{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.PhoneString, Mode=OneWay}"></Run>
                                                </TextBlock>
                                            </materialDesign:HintAssist.Hint>
                                        </TextBox>


                                        <TextBox    Grid.Row="2"  VerticalAlignment="Bottom"   FontFamily="pack://application:,,,/Resources/#password"  materialDesign:HintAssist.FontFamily="Segoe UI"  materialDesign:HintAssist.Hint="{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.PasswordString, Mode=OneWay}" Margin="5,10" Text="{Binding Password,UpdateSourceTrigger=PropertyChanged}" >
                                        </TextBox>




                                        <Button Grid.Row="3" Margin="5,0" Grid.ColumnSpan="2"  Command="{Binding LoginCommand,UpdateSourceTrigger=PropertyChanged}" Content="{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.LoginDialogLoginButtonString, Mode=OneWay}"></Button>
                                        <Button Grid.Row="4" Margin="5,5" Grid.ColumnSpan="2" Style="{StaticResource MaterialDesignFlatButton}" Content="{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.LoginDialogGoToSignUpString, Mode=OneWay}"
                                     Command="{x:Static materialDesign:Flipper.FlipCommand}">
                                        </Button>
                                    </Grid>

                                </materialDesign:Flipper.FrontContent>
                                <!--Sign up-->
                                <materialDesign:Flipper.BackContent >
                                    <Grid Margin="20,10"  Width="400" Height="430" >

                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="0.3*"></RowDefinition>
                                            <RowDefinition Height="0.3*"></RowDefinition>
                                            <RowDefinition Height="0.3*"></RowDefinition>
                                            <RowDefinition Height="0.3*"></RowDefinition>
                                            <RowDefinition Height="0.3*"></RowDefinition>
                                            <RowDefinition Height="0.3*"></RowDefinition>
                                            <RowDefinition Height="0.2*"></RowDefinition>
                                            <RowDefinition Height="Auto"></RowDefinition>
                                            <RowDefinition Height="Auto"></RowDefinition>

                                        </Grid.RowDefinitions>
                                      

                                        <TextBlock FontSize="24" HorizontalAlignment="Center"  VerticalAlignment="Bottom" Margin="5,5" Foreground="{StaticResource PrimaryHueMidBrush}" Text="{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.LoginDialogSignUpButtonString, Mode=OneWay}"></TextBlock>
                                       
                                        <TextBox Grid.Row="1"   materialDesign:HintAssist.Hint="{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.EmailString, Mode=OneWay}" VerticalAlignment="Bottom"  Style="{StaticResource ErrorTextBoxStyle}"   Margin="5,0" Text="{Binding CurrentClient.Account.Email,UpdateSourceTrigger=PropertyChanged , NotifyOnValidationError=True, ValidatesOnDataErrors=True}">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName = "TextChanged">
                                                    <i:InvokeCommandAction Command = "{Binding IValidateSignUpCommand}" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </TextBox>
                                        <TextBox Grid.Row="2" VerticalAlignment="Bottom"  materialDesign:HintAssist.Hint="{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.PhoneString, Mode=OneWay}"      Style="{StaticResource ErrorTextBoxStyle}"    Margin="5,0" Text="{Binding CurrentClient.Account.Phone,UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName = "TextChanged">
                                                    <i:InvokeCommandAction Command = "{Binding IValidateSignUpCommand}" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </TextBox>
                                        <TextBox Grid.Row="3" VerticalAlignment="Bottom"  materialDesign:HintAssist.Hint="{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.UniqueNameString, Mode=OneWay}"  Style="{StaticResource ErrorTextBoxStyle}"   Margin="5,0" Text="{Binding CurrentClient.UniqueName,UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}" >
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName = "TextChanged">
                                                    <i:InvokeCommandAction Command = "{Binding IValidateSignUpCommand}" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </TextBox>
                                        <TextBox Grid.Row="4" VerticalAlignment="Bottom"  materialDesign:HintAssist.Hint="{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.NameString, Mode=OneWay}"       Style="{StaticResource ErrorTextBoxStyle}"     Margin="5,0" Text="{Binding CurrentClient.Name,UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName = "TextChanged">
                                                    <i:InvokeCommandAction Command = "{Binding IValidateSignUpCommand}" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </TextBox>

                                        <TextBox    Grid.Row="5"  VerticalAlignment="Bottom"  materialDesign:HintAssist.Hint="{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.PasswordString, Mode=OneWay}"  Margin="5,0" Text="{Binding Password,UpdateSourceTrigger=PropertyChanged , NotifyOnValidationError=True, ValidatesOnDataErrors=True}"    >
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName = "TextChanged">
                                                    <i:InvokeCommandAction Command = "{Binding IValidateSignUpCommand}" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                            <TextBox.Style>
                                                <Style TargetType="TextBox" BasedOn="{StaticResource MaterialDesignFloatingHintTextBox }">
                                                    <Style.Triggers>
                                                        <Trigger Property="Validation.HasError" Value="true">
                                                            <Setter Property="materialDesign:HintAssist.HelperText"    
                                                            Value="{Binding RelativeSource={RelativeSource Self}    
                                                            , Path=(Validation.Errors)[0].ErrorContent}" />
                                                            <Setter Property="Foreground" Value="{StaticResource MaterialDesignValidationErrorBrush}"></Setter>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBox.Style>
                                        </TextBox>
                                        <materialDesign:PackIcon  VerticalAlignment="Bottom" Margin="5,5" Grid.Row="5" Height="25" Width="25" HorizontalAlignment="Right" Foreground="{StaticResource PrimaryHueMidBrush}"
                                            Kind="InformationOutline"  >
                                            <ToolTipService.ToolTip >
                                                <ToolTip Placement="Left" Width="250"   >
                                                    <TextBlock TextWrapping="Wrap" Text="{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.LoginDialogPasswordInfoString, Mode=OneWay}"> </TextBlock>
                                                </ToolTip>
                                            </ToolTipService.ToolTip>
                                        </materialDesign:PackIcon>
                                        <Button Grid.Row="7"  Margin="5,5" VerticalAlignment="Center" Command="{Binding SignUpCommand,UpdateSourceTrigger=PropertyChanged}" Content="{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.LoginDialogHeaderSignUpString, Mode=OneWay}">
                                        </Button>
                                        <Button Grid.Row="8" Margin="5,5" Style="{StaticResource MaterialDesignFlatButton}" Content="{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.LoginDialogGoToLogInString, Mode=OneWay}"
                                        Command="{x:Static materialDesign:Flipper.FlipCommand}">
                                        </Button>

                                    </Grid>
                                </materialDesign:Flipper.BackContent>
                            </materialDesign:Flipper>
                        </Grid>
                    </materialDesign:DialogHost.DialogContent>
                </materialDesign:DialogHost>

                <!--Edit profile dialog-->
                <materialDesign:DialogHost Grid.Column="1" Name="editProfileDialog"
                         HorizontalAlignment="Center" 
                            VerticalAlignment="Center" DialogTheme="Light" IsOpen="{Binding IsOpenProfileDialog}">

                    <materialDesign:DialogHost.DialogContent >
                        <Grid Width="300" Height="450">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"></RowDefinition>

                                <RowDefinition Height="Auto"></RowDefinition>
                                <RowDefinition Height="Auto"></RowDefinition>
                                <RowDefinition Height="Auto"></RowDefinition>
                                <RowDefinition Height="Auto"></RowDefinition>
                                <RowDefinition Height="Auto"></RowDefinition>

                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                <ColumnDefinition></ColumnDefinition>
                            </Grid.ColumnDefinitions>

                            <Border Grid.ColumnSpan="3"  Background="{DynamicResource PrimaryHueMidBrush }" TextBlock.Foreground="{StaticResource MaterialDesignBackground}">
                                <Grid Margin="10">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition></ColumnDefinition>
                                        <ColumnDefinition></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"></RowDefinition>
                                        <RowDefinition Height="Auto"></RowDefinition>
                                        <RowDefinition></RowDefinition>
                                    </Grid.RowDefinitions>
                                    <Ellipse Width="70" Height="70" Grid.ColumnSpan="2" Margin="10,0" Grid.RowSpan="2" HorizontalAlignment="Center" VerticalAlignment="Center" >
                                        <Ellipse.Fill>
                                            <ImageBrush ImageSource="{Binding ClientForChange.Photo}" Stretch="UniformToFill"/>
                                        </Ellipse.Fill>
                                    </Ellipse>
                                    <Button Grid.Row="3" Grid.ColumnSpan="2" VerticalAlignment="Center" Margin="10"  HorizontalAlignment="Center" Background="{StaticResource SecondaryHueMidBrush}" materialDesign:ButtonAssist.CornerRadius="15" BorderBrush="#FF663737" Command="{Binding SetPhotoCommand}" Content="{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.EditProfileDialogSetProfilePhotoButtonString, Mode=OneWay}"></Button>
                                </Grid>
                            </Border>

                            <materialDesign:PackIcon  Grid.Row="1" VerticalAlignment="Bottom" Margin="10,0,5,0"
                                 Kind="AccountOutline"
                                 Height="30"
                                 Width="30" />
                            <TextBox Grid.Row="1" Grid.Column="1" Margin="15,10" VerticalAlignment="Bottom" materialDesign:HintAssist.Hint="{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.NameString, Mode=OneWay}" Text="{Binding ClientForChange.Name,UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}" Style="{StaticResource ErrorTextBoxStyle}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName = "TextChanged">
                                        <i:InvokeCommandAction Command = "{Binding IValidateUserInfoCommand}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </TextBox>
                            <materialDesign:PackIcon  Grid.Row="2" VerticalAlignment="Bottom" Margin="10,0,5,0"
                                 Kind="PhoneOutline"
                                 Height="30"
                                 Width="30" />
                            <TextBox Grid.Row="2" Grid.Column="1" Margin="15,10" VerticalAlignment="Bottom" materialDesign:HintAssist.Hint="{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.PhoneString, Mode=OneWay}"  Text="{Binding ClientForChange.Account.Phone,UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}" Style="{StaticResource ErrorTextBoxStyle}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName = "TextChanged">
                                        <i:InvokeCommandAction Command = "{Binding IValidateUserInfoCommand}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </TextBox>
                            <materialDesign:PackIcon  Grid.Row="3" VerticalAlignment="Bottom" Margin="10,0,5,0"
                                 Kind="EmailOutline"
                                 Height="30"
                                 Width="30" />
                            <TextBox Grid.Row="3" Grid.Column="1" Margin="15,10" VerticalAlignment="Bottom" materialDesign:HintAssist.Hint="{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.EmailString, Mode=OneWay}" Text="{Binding ClientForChange.Account.Email,UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}" Style="{StaticResource ErrorTextBoxStyle}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName = "TextChanged">
                                        <i:InvokeCommandAction Command = "{Binding IValidateUserInfoCommand}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </TextBox>
                            <materialDesign:PackIcon  Grid.Row="4" VerticalAlignment="Bottom" Margin="10,0,5,0"
                                 Kind="At"
                                 Height="30"
                                 Width="30" />
                            <TextBox Grid.Row="4" Grid.Column="1" Margin="15,10" VerticalAlignment="Bottom" materialDesign:HintAssist.Hint="{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.UniqueNameString, Mode=OneWay}" Text="{Binding ClientForChange.UniqueName,UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}" Style="{StaticResource ErrorTextBoxStyle}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName = "TextChanged">
                                        <i:InvokeCommandAction Command = "{Binding IValidateUserInfoCommand}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </TextBox>
                            <DockPanel  Grid.Row="5" Grid.ColumnSpan="2" LastChildFill="False" Margin="15,20,15,0" VerticalAlignment="Bottom">
                                <Button Width="130"  Command="{Binding SetProfileCommand,UpdateSourceTrigger=PropertyChanged}" Content="{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.AcceptButtonString, Mode=OneWay}"></Button>
                                <Button Width="130" DockPanel.Dock="Right" IsCancel="True" Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}" Content="{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.CancelButtonString, Mode=OneWay}"></Button>
                            </DockPanel>
                        </Grid>
                    </materialDesign:DialogHost.DialogContent>
                </materialDesign:DialogHost>

                <!--Contacts dialog-->
                <materialDesign:DialogHost Grid.Column="1" Name="contactsDialog"
                         HorizontalAlignment="Center" 
                            VerticalAlignment="Center" DialogTheme="Light" IsOpen="{Binding IsOpenContactsDialog}" >

                    <materialDesign:DialogHost.DialogContent >
                        <Grid Width="350" Height="500"  >
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0.15*"></RowDefinition>
                                <RowDefinition Height="0.1*"></RowDefinition>
                                <RowDefinition Height="0.4*"></RowDefinition>
                                <RowDefinition Height="Auto"></RowDefinition>
                                <RowDefinition Height="0.4*"></RowDefinition>
                                <RowDefinition Height="0.12*"></RowDefinition>

                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition></ColumnDefinition>
                                <ColumnDefinition></ColumnDefinition>

                            </Grid.ColumnDefinitions>
                            <TextBlock FontSize="20" Margin="25,15" FontWeight="DemiBold" Grid.ColumnSpan="2" Foreground="{ DynamicResource PrimaryHueMidBrush}" Text="{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.ContactsDialogHeaderString, Mode=OneWay}"></TextBlock>
                            <Button  Style="{StaticResource MaterialDesignIconForegroundButton}" Grid.Column="1" HorizontalAlignment="Right" IsCancel="True" Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}">
                                <materialDesign:PackIcon Kind="CloseOutline" Foreground="{ DynamicResource PrimaryHueMidBrush}"/>
                            </Button>
                            <Grid Grid.Row="1"  Margin="15,0" Grid.ColumnSpan="2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition  Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Button  Style="{DynamicResource MaterialDesignToolButton}" >
                                    <materialDesign:PackIcon Kind="Magnify" Opacity=".56" RenderTransformOrigin="0.5,0.5" Height="20" Width="20" >
                                        <materialDesign:PackIcon.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform ScaleY="1" ScaleX="-1"/>
                                                <SkewTransform AngleY="0" AngleX="0"/>
                                                <RotateTransform Angle="0"/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </materialDesign:PackIcon.RenderTransform>
                                    </materialDesign:PackIcon>
                                </Button>
                                <TextBox
                         Margin="0,0,10,0"
                         Grid.Column="1"                         
                         materialDesign:HintAssist.Hint="{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.SearchString, Mode=OneWay}"
                         materialDesign:TextFieldAssist.HasClearButton="True"                                  
                         VerticalAlignment="Center" FontSize="15"
                                    Text="{Binding UniqueNameContact, UpdateSourceTrigger=PropertyChanged}"/>

                            </Grid>
                            <!--List of contacts-->
                            <ListBox Grid.ColumnSpan="2" Grid.Row="2" Margin="25,10" ItemsSource="{Binding Contacts}" SelectedItem="{Binding SelectedContact}"  >
                                <ListBox.ToolTip>
                                    <ToolTip  ToolTipService.InitialShowDelay="3000"
                                    ToolTipService.ShowDuration="4000"
                                    ToolTipService.BetweenShowDelay="1000"  >
                                        <TextBlock Text="{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.DoubleClickOnTheLisContactAndClientsString, Mode=OneWay}"  Width="200" TextWrapping="Wrap" ></TextBlock>
                                    </ToolTip>
                                </ListBox.ToolTip>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseDoubleClick">
                                        <i:InvokeCommandAction Command="{Binding CreateOrSelectPMChatCommand}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <Border TextBlock.FontSize="15">
                                            <Grid >
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                                                    <ColumnDefinition></ColumnDefinition>

                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>


                                                    <RowDefinition></RowDefinition>
                                                    <RowDefinition></RowDefinition>
                                                    <RowDefinition></RowDefinition>
                                                    <RowDefinition></RowDefinition>

                                                    <RowDefinition></RowDefinition>
                                                    <RowDefinition></RowDefinition>


                                                </Grid.RowDefinitions>
                                                <Ellipse Width="50" Height="50"  Grid.RowSpan="4" Grid.Row="1">
                                                    <Ellipse.Fill>
                                                        <ImageBrush ImageSource="{Binding Photo}"  Stretch="UniformToFill"/>
                                                    </Ellipse.Fill>
                                                </Ellipse>

                                                <TextBlock Grid.Column="1" FontWeight="SemiBold"  Grid.RowSpan="3" Margin="15,0"  TextAlignment="Left" TextWrapping="Wrap" VerticalAlignment="Bottom" Text="{Binding Name}"></TextBlock>
                                                <TextBlock Grid.Column="1" Grid.Row="3" Margin="15,0" Grid.RowSpan="2" VerticalAlignment="Bottom"  TextAlignment="Left">
                                                    <Run Text="@"/><Run Text="{Binding UniqueName}"/>

                                                </TextBlock>
                                            </Grid>
                                        </Border>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>

                            </ListBox>
                            <Separator Margin="25,5" Grid.ColumnSpan="2" Grid.Row="3"></Separator>
                            <!--List of clients-->
                            <ListBox Grid.ColumnSpan="2" Grid.Row="4" Margin="25,10" ItemsSource="{Binding ClientsForAdd}" SelectedItem="{Binding SelectedClientForAdd}" >
                                <ListBox.ToolTip>
                                    <ToolTip  ToolTipService.InitialShowDelay="3000"
                                    ToolTipService.ShowDuration="4000"
                                    ToolTipService.BetweenShowDelay="1000"  ToolTipService.PlacementRectangle="150,125,0,0">
                                        <TextBlock Text="{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.DoubleClickOnTheLisContactAndClientsString, Mode=OneWay}"  Width="200" TextWrapping="Wrap" ></TextBlock>
                                    </ToolTip>
                                </ListBox.ToolTip>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseDoubleClick">
                                        <i:InvokeCommandAction Command="{Binding CreateOrSelectPMChatCommand}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <Border TextBlock.FontSize="15">
                                            <Grid >
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                                                    <ColumnDefinition></ColumnDefinition>

                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>


                                                    <RowDefinition></RowDefinition>
                                                    <RowDefinition></RowDefinition>
                                                    <RowDefinition></RowDefinition>
                                                    <RowDefinition></RowDefinition>

                                                    <RowDefinition></RowDefinition>
                                                    <RowDefinition></RowDefinition>


                                                </Grid.RowDefinitions>
                                                <Ellipse Width="50" Height="50"  Grid.RowSpan="4" Grid.Row="1">
                                                    <Ellipse.Fill>
                                                        <ImageBrush ImageSource="{Binding Photo}"  Stretch="UniformToFill"/>
                                                    </Ellipse.Fill>
                                                </Ellipse>

                                                <TextBlock Grid.Column="1" FontWeight="SemiBold"  Grid.RowSpan="3" Margin="15,0"  TextAlignment="Left" TextWrapping="Wrap" VerticalAlignment="Bottom" Text="{Binding Name}"></TextBlock>
                                                <TextBlock Grid.Column="1" Grid.Row="3" Margin="15,0" Grid.RowSpan="2" VerticalAlignment="Bottom"  TextAlignment="Left">
                                                    <Run Text="@"/><Run Text="{Binding UniqueName}"/>

                                                </TextBlock>
                                            </Grid>
                                        </Border>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>

                            </ListBox>

                            <Button  Grid.Row="5" Margin="10,5" Content="{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.ContactsDialogAddContactString, Mode=OneWay}" Command="{Binding AddContactCommand}"></Button>
                            <Button Grid.Row="5" Grid.Column="1" Margin="10,5" Content="{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.ContactsDialogDeleteContactString, Mode=OneWay}" Command="{Binding DeleteContactCommand}"></Button>


                        </Grid>
                    </materialDesign:DialogHost.DialogContent>
                </materialDesign:DialogHost>

                <!--Add/Edit chat dialog-->
                <materialDesign:DialogHost Grid.Column="1" 
                         HorizontalAlignment="Center" Name="addEditChatDialog"
                            VerticalAlignment="Center" IsOpen="{Binding IsOpenAddEditChatDialog}">

                    <materialDesign:DialogHost.DialogContent>
                        <Grid Width="300" Height="430">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"></RowDefinition>

                                <RowDefinition Height="Auto"></RowDefinition>
                                <RowDefinition Height="Auto"></RowDefinition>
                                <RowDefinition Height="Auto"></RowDefinition>
                                <RowDefinition Height="Auto"></RowDefinition>
                                <RowDefinition Height="Auto"></RowDefinition>

                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                <ColumnDefinition></ColumnDefinition>
                            </Grid.ColumnDefinitions>

                            <Border Grid.ColumnSpan="3"  Background="{DynamicResource PrimaryHueMidBrush }" TextBlock.Foreground="{StaticResource MaterialDesignBackground}">
                                <Grid Margin="10">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition></ColumnDefinition>
                                        <ColumnDefinition></ColumnDefinition>

                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>

                                        <RowDefinition Height="Auto"></RowDefinition>
                                        <RowDefinition Height="Auto"></RowDefinition>
                                        <RowDefinition></RowDefinition>




                                    </Grid.RowDefinitions>
                                    <Ellipse Width="70" Height="70" Grid.ColumnSpan="2" Margin="10,0" Grid.RowSpan="2" HorizontalAlignment="Center" VerticalAlignment="Center" >
                                        <Ellipse.Fill>
                                            <ImageBrush ImageSource="{Binding ChatForChange.Photo}" Stretch="UniformToFill"/>
                                        </Ellipse.Fill>
                                    </Ellipse>
                                    <Button Grid.Row="3" Grid.ColumnSpan="2" VerticalAlignment="Center" Margin="10"  HorizontalAlignment="Center" Background="{StaticResource SecondaryHueMidBrush}" materialDesign:ButtonAssist.CornerRadius="15" BorderBrush="#FF663737" Command="{Binding SetChatPhotoCommand}" Content="{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.AddEditChatDialogSelectChatPhotoButtonString, Mode=OneWay}"></Button>
                                </Grid>
                            </Border>

                            <materialDesign:PackIcon  Grid.Row="1" VerticalAlignment="Bottom" Margin="10,0,5,0"
                                 Kind="ChatOutline"
                                 Height="30"
                                 Width="30" />
                            <TextBox Grid.Row="1" Grid.Column="1" Margin="15,10" VerticalAlignment="Bottom" materialDesign:HintAssist.Hint= "{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.NameChatSrting, Mode=OneWay}" Text="{Binding ChatForChange.Name,UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}" Style="{StaticResource ErrorTextBoxStyle}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName = "TextChanged">
                                        <i:InvokeCommandAction Command = "{Binding IValidateChatInfoCommand}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </TextBox>

                            <materialDesign:PackIcon  Grid.Row="2" VerticalAlignment="Bottom" Margin="10,0,5,0"
                                 Kind="At"
                                 Height="30"
                                 Width="30" />
                            <TextBox Grid.Row="2" Grid.Column="1" Margin="15,10" VerticalAlignment="Bottom" materialDesign:HintAssist.Hint="{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.UniqueNameString, Mode=OneWay}" Text="{Binding ChatForChange.UniqueName,UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}" Style="{StaticResource ErrorTextBoxStyle}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName = "TextChanged">
                                        <i:InvokeCommandAction Command = "{Binding IValidateChatInfoCommand}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </TextBox>

                            <materialDesign:PackIcon  Grid.Row="3" VerticalAlignment="Bottom" Margin="10,0,5,0"
                                 Kind="AccountQuestionOutline"
                                 Height="30"
                                 Width="30" />
                            <TextBox  Grid.Row="3" Grid.Column="1" Margin="15,10" VerticalAlignment="Bottom" materialDesign:HintAssist.Hint="{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.MaxNumOfMembersString, Mode=OneWay}"  Text="{Binding ChatForChange.MaxUsersString,UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}" Style="{StaticResource ErrorTextBoxStyle}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName = "TextChanged">
                                        <i:InvokeCommandAction Command = "{Binding IValidateChatInfoCommand}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </TextBox>

                            <Grid Grid.Row="4" Margin="10,15,15,0" Grid.ColumnSpan="2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                                    <ColumnDefinition></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"></RowDefinition>
                                </Grid.RowDefinitions>
                                <ToggleButton  Style="{StaticResource MaterialDesignSwitchToggleButton}" Margin="0,7" IsChecked="{Binding ChatForChange.IsPrivate}">
                                    <materialDesign:PackIcon
                            Kind="LockOpenVariantOutline " >
                                    </materialDesign:PackIcon>
                                    <materialDesign:ToggleButtonAssist.OnContent>
                                        <materialDesign:PackIcon
                             Kind="LockOutline" />
                                    </materialDesign:ToggleButtonAssist.OnContent>
                                </ToggleButton>
                                <TextBlock Grid.Column="1" Text="{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.AddEditChatDialogIsPrivateChatString, Mode=OneWay}"  Margin="15,5"  FontSize="14" Foreground="{DynamicResource MaterialDesignLightForeground}" />

                            </Grid>

                            <DockPanel  Grid.Row="5" Grid.ColumnSpan="2" LastChildFill="False" Margin="10,20,15,0" VerticalAlignment="Bottom">
                                <Button Width="120" >
                                    <Button.Style>
                                        <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="Button">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsAddChatDialog}" Value="True">
                                                    <Setter Property="Command" Value="{Binding AddChatCommand,UpdateSourceTrigger=PropertyChanged}"></Setter>
                                                    <Setter Property="Content" Value="{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.AddEditChatDialogButtonCreateString, Mode=OneWay}"></Setter>

                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsAddChatDialog}" Value="False">
                                                    <Setter Property="Command" Value="{Binding SetChatPropertiesCommand}"></Setter>
                                                    <Setter Property="Content" Value="{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.AddEditChatDialogButtonEditString, Mode=OneWay}"></Setter>

                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                                <Button Width="120" DockPanel.Dock="Right" IsCancel="True" Content="{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.CancelButtonString, Mode=OneWay}" Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}"></Button>
                            </DockPanel>
                        </Grid>
                    </materialDesign:DialogHost.DialogContent>
                </materialDesign:DialogHost>

                <!--Join chat dialog-->
                <materialDesign:DialogHost Grid.Column="1" 
                         HorizontalAlignment="Center" Name="joinChatDialog"
                            VerticalAlignment="Center" DialogTheme="Light" IsOpen="{Binding IsOpenJoinToChatDialog}">
                    <materialDesign:DialogHost.DialogContent >
                        <Grid Width="350" Height="500"  >
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"></RowDefinition>
                                <RowDefinition Height="Auto"></RowDefinition>
                                <RowDefinition></RowDefinition>
                                <RowDefinition Height="Auto"></RowDefinition>

                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition></ColumnDefinition>
                                <ColumnDefinition></ColumnDefinition>

                            </Grid.ColumnDefinitions>
                            <TextBlock FontSize="20" Margin="25,15" FontWeight="DemiBold" Grid.ColumnSpan="2" Foreground="{ DynamicResource PrimaryHueMidBrush}" Text="{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.JoinChatDialogHeaderChatsString, Mode=OneWay}"></TextBlock>
                            <Button  Style="{StaticResource MaterialDesignIconForegroundButton}" Grid.Column="1" HorizontalAlignment="Right" IsCancel="True" Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}">
                                <materialDesign:PackIcon Kind="CloseOutline" Foreground="{ DynamicResource PrimaryHueMidBrush}"/>
                            </Button>
                            <Grid Grid.Row="1"  Margin="15,0" Grid.ColumnSpan="2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition  Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Button  Style="{DynamicResource MaterialDesignToolButton}" >
                                    <materialDesign:PackIcon Kind="Magnify" Opacity=".56" RenderTransformOrigin="0.5,0.5" Height="20" Width="20" >
                                        <materialDesign:PackIcon.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform ScaleY="1" ScaleX="-1"/>
                                                <SkewTransform AngleY="0" AngleX="0"/>
                                                <RotateTransform Angle="0"/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </materialDesign:PackIcon.RenderTransform>
                                    </materialDesign:PackIcon>
                                </Button>
                                <TextBox
                         Margin="0,0,10,0"
                         Grid.Column="1"   
                     
                         materialDesign:HintAssist.Hint="{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.SearchString, Mode=OneWay}"
                         materialDesign:TextFieldAssist.HasClearButton="True"                                  
                         VerticalAlignment="Center" FontSize="15"
                         Text="{Binding UniqueNameChat, UpdateSourceTrigger=PropertyChanged}"/>

                            </Grid>
                            <ListBox Grid.ColumnSpan="2" Grid.Row="2" Margin="25,10" ItemsSource="{Binding JoinToChatChats}" SelectedItem="{Binding SelectedChatForJoin,UpdateSourceTrigger=PropertyChanged}">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <Border TextBlock.FontSize="15">
                                            <Grid >
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                                                    <ColumnDefinition></ColumnDefinition>

                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>


                                                    <RowDefinition></RowDefinition>
                                                    <RowDefinition></RowDefinition>
                                                    <RowDefinition></RowDefinition>
                                                    <RowDefinition></RowDefinition>

                                                    <RowDefinition></RowDefinition>
                                                    <RowDefinition></RowDefinition>


                                                </Grid.RowDefinitions>
                                                <Ellipse Width="50" Height="50"  Grid.RowSpan="4" Grid.Row="1">
                                                    <Ellipse.Fill>
                                                        <ImageBrush ImageSource="{Binding Photo}" Stretch="UniformToFill"/>
                                                    </Ellipse.Fill>
                                                </Ellipse>

                                                <TextBlock Grid.Column="1" FontWeight="Bold"  Grid.RowSpan="3" Margin="15,0"  TextAlignment="Left" TextWrapping="Wrap" VerticalAlignment="Bottom" Text="{Binding Name,UpdateSourceTrigger=PropertyChanged}"></TextBlock>
                                                <TextBlock Grid.Column="1" Grid.Row="3" Margin="15,0" Grid.RowSpan="2" VerticalAlignment="Bottom"  TextAlignment="Left" FontSize="13">
                                         <Run Text="@"/><Run Text="{Binding UniqueName,UpdateSourceTrigger=PropertyChanged}" />
                                                </TextBlock>
                                            </Grid>
                                        </Border>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>

                            </ListBox>


                            <Button  Grid.Row="3" Margin="15,5" Content="{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.JoinChatDialogJoin, Mode=OneWay}" Command="{Binding JoinToChatCommand, UpdateSourceTrigger=PropertyChanged}"></Button>
                            <Button Grid.Row="3" Grid.Column="1" Margin="15,5" Content="{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.CancelButtonString, Mode=OneWay}"  Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}"></Button>


                        </Grid>
                    </materialDesign:DialogHost.DialogContent>
                </materialDesign:DialogHost>

                <!--Chat view profile dialog-->
                <materialDesign:DialogHost Grid.Column="1" 
                         HorizontalAlignment="Center" Name="chatProfileDialog"
                            VerticalAlignment="Center" DialogTheme="Light" IsOpen="{Binding IsOpenProfileInfoDialog}">

                    <materialDesign:DialogHost.DialogContent >
                        <Grid Width="350" Height="270"  >
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"></RowDefinition>
                                <RowDefinition Height="Auto"></RowDefinition>
                                <RowDefinition Height="Auto"></RowDefinition>
                                <RowDefinition Height="Auto"></RowDefinition>
                                <RowDefinition Height="Auto"></RowDefinition>
                                <RowDefinition Height="Auto"></RowDefinition>

                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                <ColumnDefinition ></ColumnDefinition>

                            </Grid.ColumnDefinitions>
                            <TextBlock Margin="15,5" FontSize="20" Foreground="{StaticResource PrimaryHueMidBrush}" VerticalAlignment="Center" Grid.ColumnSpan="2" Text="{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.ChatViewProfileDialogHeaderUserInfoString, Mode=OneWay}"></TextBlock>
                            <Button  Style="{StaticResource MaterialDesignIconForegroundButton}" Grid.Column="1" HorizontalAlignment="Right"  IsCancel="True" Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}">
                                <materialDesign:PackIcon Kind="CloseOutline" Foreground="{ DynamicResource PrimaryHueMidBrush}"/>
                            </Button>
                            <Grid Grid.Row="1" Margin="15,15" Grid.ColumnSpan="2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                                    <ColumnDefinition></ColumnDefinition>

                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>


                                    <RowDefinition></RowDefinition>
                                    <RowDefinition></RowDefinition>
                                    <RowDefinition></RowDefinition>
                                    <RowDefinition></RowDefinition>


                                </Grid.RowDefinitions>
                                <Ellipse Width="65" Height="65" Grid.Row="1" Grid.RowSpan="4" >
                                    <Ellipse.Fill>
                                        <ImageBrush ImageSource="{Binding OpponentClient.Photo}" Stretch="UniformToFill"/>
                                    </Ellipse.Fill>
                                </Ellipse>
                                <TextBlock Grid.Column="1" Grid.Row="2" FontSize="15"  Margin="15,0" FontWeight="DemiBold" Text="{Binding OpponentClient.Name}"></TextBlock>
                                <TextBlock Grid.Column="1" Grid.Row="3" FontSize="15"   Margin="15,0" FontWeight="DemiBold" >
                                         <Run Text="@"></Run><Run Text="{Binding OpponentClient.UniqueName}"></Run>
                                </TextBlock>
                            </Grid>
                            <Separator Grid.Row="2" Grid.ColumnSpan="2" Margin="10,0" Background="{StaticResource PrimaryHueMidBrush}"></Separator>
                            <materialDesign:PackIcon  Grid.Row="3" VerticalAlignment="Bottom" Margin="10,0,5,0"
                                 Kind="PhoneOutline"
                                 Height="30"
                                 Width="30" />
                            <TextBox Grid.Row="3" Grid.Column="1" Margin="15,10" VerticalAlignment="Bottom" materialDesign:HintAssist.HelperText="{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.PhoneString, Mode=OneWay}" IsReadOnly="True" Text="{Binding OpponentClient.Account.Phone}" ></TextBox>
                            <materialDesign:PackIcon  Grid.Row="4" VerticalAlignment="Bottom" Margin="10,0,5,0"
                                 Kind="At"
                                 Height="30"
                                 Width="30" />
                            <TextBox  Grid.Row="4" Grid.Column="1" Margin="15,10" VerticalAlignment="Bottom" materialDesign:HintAssist.HelperText="{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.EmailString, Mode=OneWay}"  IsReadOnly="True" Text="{Binding OpponentClient.Account.Email}" ></TextBox>
                        </Grid>
                    </materialDesign:DialogHost.DialogContent>
                </materialDesign:DialogHost>

                <!--Chat view chat info dialog-->
                <materialDesign:DialogHost Grid.Column="1"  IsOpen="{Binding IsOpenChatInfoDialog}"
                         HorizontalAlignment="Center" Name="chatViewChatInfoDialog"
                            VerticalAlignment="Center" DialogTheme="Light"  >

                    <materialDesign:DialogHost.DialogContent >
                        <Grid Width="350" Height="470"  >
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"></RowDefinition>
                                <RowDefinition Height="Auto"></RowDefinition>
                                <RowDefinition Height="Auto"></RowDefinition>
                                <RowDefinition Height="Auto"></RowDefinition>
                                <RowDefinition Height="Auto"></RowDefinition>
                                <RowDefinition Height="Auto"></RowDefinition>
                                <RowDefinition ></RowDefinition>

                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                <ColumnDefinition ></ColumnDefinition>

                            </Grid.ColumnDefinitions>
                            <TextBlock Margin="15,5" FontSize="20" Foreground="{StaticResource PrimaryHueMidBrush}" VerticalAlignment="Center" Grid.ColumnSpan="2" Text="{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.ChatViewChatInfoDialogHeaderChatInfoString, Mode=OneWay}"></TextBlock>
                            <Button  Style="{StaticResource MaterialDesignIconForegroundButton}" Grid.Column="1" HorizontalAlignment="Right"  IsCancel="True" Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}">
                                <materialDesign:PackIcon Kind="CloseOutline" Foreground="{ DynamicResource PrimaryHueMidBrush}"/>
                            </Button>
                            <Grid Grid.Row="1" Margin="15,15" Grid.ColumnSpan="2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                                    <ColumnDefinition></ColumnDefinition>

                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>


                                    <RowDefinition></RowDefinition>
                                    <RowDefinition></RowDefinition>
                                    <RowDefinition></RowDefinition>
                                    <RowDefinition></RowDefinition>
                                    <RowDefinition></RowDefinition>
                                    <RowDefinition></RowDefinition>
                                </Grid.RowDefinitions>
                                <Ellipse Width="65" Height="65" Grid.Row="1" Grid.RowSpan="4" >
                                    <Ellipse.Fill>
                                        <ImageBrush ImageSource="{Binding SelectedChat.Photo}" Stretch="UniformToFill"/>
                                    </Ellipse.Fill>
                                </Ellipse>
                                <TextBlock Grid.Column="1" FontSize="15" Grid.Row="2"  Margin="15,0" FontWeight="DemiBold" Text="{Binding SelectedChat.Name}"></TextBlock>
                                <TextBlock Grid.Column="1" FontSize="12" Foreground="{StaticResource MaterialDesignToolForeground}" Grid.Row="3"  Margin="15,0" FontWeight="DemiBold">
                                    <Run Text="{Binding CountMembers,UpdateSourceTrigger=PropertyChanged}"></Run> <Run Text="{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.MembersString, Mode=OneWay}"></Run>
                                </TextBlock>

                            </Grid>
                            <Separator Grid.Row="2" Grid.ColumnSpan="2" Margin="10,0" Background="{StaticResource PrimaryHueMidBrush}"></Separator>
                            <materialDesign:PackIcon  Grid.Row="4" VerticalAlignment="Bottom" Margin="10,0,5,0"
                                 Kind="At"
                                 Height="30"
                                 Width="30" />
                            <TextBox IsReadOnly="True" Grid.Row="4" Grid.Column="1" Margin="15,10" VerticalAlignment="Bottom" materialDesign:HintAssist.HelperText= "{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.UniqueNameString, Mode=OneWay}" Text="{Binding SelectedChat.UniqueName}" ></TextBox>
                            <Separator Grid.Row="5" Grid.ColumnSpan="2" Margin="10,25" Background="{StaticResource PrimaryHueMidBrush}"></Separator>

                            <Grid Grid.Row="6" Grid.ColumnSpan="2" >
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"></RowDefinition>
                                    <RowDefinition ></RowDefinition>

                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                                    <ColumnDefinition></ColumnDefinition>

                                </Grid.ColumnDefinitions>
                                <materialDesign:PackIcon  VerticalAlignment="Bottom" Margin="10,0,5,0"
                                 Kind="AccountMultipleOutline"
                                 Height="25"
                                 Width="25" />
                                <TextBlock  Grid.Column="1"  Margin="15,5,0,5" VerticalAlignment="Bottom"  Text="{Binding CountMembers}"></TextBlock>
                                <TextBlock  Grid.Column="2"  Margin="5,5,15,5" VerticalAlignment="Bottom"  Text= "{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.MembersString, Mode=OneWay}"></TextBlock>
                                <!--List of members-->
                                <ListBox  Grid.Row="1" Margin="5" Grid.ColumnSpan="3" ItemsSource="{Binding Members}">
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <Grid >
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                                                    <ColumnDefinition></ColumnDefinition>

                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>


                                                    <RowDefinition></RowDefinition>
                                                    <RowDefinition></RowDefinition>
                                                    <RowDefinition></RowDefinition>
                                                    <RowDefinition></RowDefinition>
                                                    <RowDefinition></RowDefinition>
                                                    <RowDefinition></RowDefinition>
                                                </Grid.RowDefinitions>
                                                <Ellipse Width="45" Height="45" Grid.RowSpan="4" Grid.Row="1">
                                                    <Ellipse.Fill>
                                                        <ImageBrush ImageSource="{Binding Client.Photo}" Stretch="UniformToFill"/>
                                                    </Ellipse.Fill>
                                                </Ellipse>

                                                <TextBlock Grid.Column="1" FontWeight="DemiBold" Grid.RowSpan="3" FontSize="14" Margin="5,0" TextWrapping="Wrap" VerticalAlignment="Bottom" Text="{Binding Client.Name}"></TextBlock>
                                                <TextBlock Grid.Column="1" Grid.Row="3" Margin="5,0" Grid.RowSpan="2" FontSize="13" VerticalAlignment="Bottom"  TextAlignment="Center" HorizontalAlignment="Left">
                                        <Run Text="@"></Run><Run Text="{Binding Client.UniqueName}"></Run>
                                                </TextBlock>
                                            </Grid>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                            </Grid>
                        </Grid>
                    </materialDesign:DialogHost.DialogContent>
                </materialDesign:DialogHost>

                <!--Information dialog-->
                <materialDesign:DialogHost Grid.Column="1" 
                         HorizontalAlignment="Center" 
                            VerticalAlignment="Center" DialogTheme="Light" IsOpen="{Binding IsOpenInfoDialog}">

                    <materialDesign:DialogHost.DialogContent>
                        <Grid Width="250" Height="250" >
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"></RowDefinition>
                                <RowDefinition></RowDefinition>
                                <RowDefinition Height="Auto"></RowDefinition>

                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition></ColumnDefinition>
                                <ColumnDefinition></ColumnDefinition>

                            </Grid.ColumnDefinitions>
                            <Border Height="40" Background="{DynamicResource PrimaryHueMidBrush }" TextBlock.Foreground="{StaticResource MaterialDesignBackground}" Grid.ColumnSpan="2" >
                                <TextBlock FontSize="20" Margin="5" VerticalAlignment="Center" HorizontalAlignment="Center" Text="{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.InformationDialogHeaderInformationDialogString, Mode=OneWay}"></TextBlock>
                            </Border>

                            <TextBlock Margin="5" Grid.Row="1" Grid.ColumnSpan="2"  FontWeight="DemiBold" HorizontalAlignment="Center" TextWrapping="Wrap"  Text="{Binding TextForInfoDialog}"></TextBlock>
                            <Button Grid.Row="2" Margin="5"  Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}" Content="{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.InformationDialogOKButtonString, Mode=OneWay}"></Button>
                            <Button Grid.Row="2" Grid.Column="1" Margin="5" IsCancel="True" Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}" Content="{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.CancelButtonString, Mode=OneWay}"></Button>
                        </Grid>
                    </materialDesign:DialogHost.DialogContent>
                </materialDesign:DialogHost>

                <!--Invite contact to chat dialog-->
                <materialDesign:DialogHost Grid.Column="1" 
                         HorizontalAlignment="Center" Name="inviteContactDialog"
                            VerticalAlignment="Center" DialogTheme="Light"  IsOpen="{Binding IsOpenAddMembersForChatDialog}">

                    <materialDesign:DialogHost.DialogContent>
                        <Grid Width="300" Height="400">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"></RowDefinition>
                                <RowDefinition Height="Auto"></RowDefinition>
                                <RowDefinition Height="Auto"></RowDefinition>
                                <RowDefinition></RowDefinition>
                                <RowDefinition Height="Auto"></RowDefinition>

                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition></ColumnDefinition>
                                <ColumnDefinition></ColumnDefinition>

                            </Grid.ColumnDefinitions>
                            <TextBlock Margin="15,5" FontSize="20" Foreground="{StaticResource PrimaryHueMidBrush}" VerticalAlignment="Center" Grid.ColumnSpan="2" Text="{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.InviteContactDialogHeaderString, Mode=OneWay}"></TextBlock>

                            <TextBlock Grid.Row="1" Grid.ColumnSpan="2" Margin="15,5" Foreground="{StaticResource PrimaryHueMidBrush}" VerticalAlignment="Center">
                                <Run Text="{Binding CountMembers}"></Run><Run>/</Run><Run Text="{Binding SelectedChat.MaxUsersString}"></Run> <Run Text="{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.MembersString, Mode=OneWay}"></Run>
                            </TextBlock>
                            <Grid Grid.Row="2"  Margin="15,0,35,0" Grid.ColumnSpan="2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition  Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Button  Style="{DynamicResource MaterialDesignToolButton}" >
                                    <materialDesign:PackIcon Kind="Magnify" Opacity=".56" RenderTransformOrigin="0.5,0.5" Height="20" Width="20" >
                                        <materialDesign:PackIcon.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform ScaleY="1" ScaleX="-1"/>
                                                <SkewTransform AngleY="0" AngleX="0"/>
                                                <RotateTransform Angle="0"/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </materialDesign:PackIcon.RenderTransform>
                                    </materialDesign:PackIcon>
                                </Button>
                                <TextBox
                         Margin="0,0,10,0"
                         Grid.Column="1"                         
                         materialDesign:HintAssist.Hint="{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.SearchString, Mode=OneWay}"
                         materialDesign:TextFieldAssist.HasClearButton="True"                                  
                         VerticalAlignment="Center" FontSize="15"
                                    Text="{Binding UniqueNameContactForInvite, UpdateSourceTrigger=PropertyChanged}"/>

                            </Grid>
                            <!--List of contacts-->
                            <ListBox Grid.ColumnSpan="2" Grid.Row="3" Margin="25,10" ItemsSource="{Binding Contacts}" SelectedItem="{Binding SelectedClientForInvite}" >
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <Border TextBlock.FontSize="15">
                                            <Grid >
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                                                    <ColumnDefinition></ColumnDefinition>

                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>


                                                    <RowDefinition></RowDefinition>
                                                    <RowDefinition></RowDefinition>
                                                    <RowDefinition></RowDefinition>
                                                    <RowDefinition></RowDefinition>

                                                    <RowDefinition></RowDefinition>
                                                    <RowDefinition></RowDefinition>


                                                </Grid.RowDefinitions>
                                                <Ellipse Width="50" Height="50"  Grid.RowSpan="4" Grid.Row="1">
                                                    <Ellipse.Fill>
                                                        <ImageBrush ImageSource="{Binding Photo}"  Stretch="UniformToFill"/>
                                                    </Ellipse.Fill>
                                                </Ellipse>

                                                <TextBlock Grid.Column="1" FontWeight="SemiBold"  Grid.RowSpan="3" Margin="15,0"  TextAlignment="Left" TextWrapping="Wrap" VerticalAlignment="Bottom" Text="{Binding Name}"></TextBlock>
                                                <TextBlock Grid.Column="1" Grid.Row="3" Margin="15,0" Grid.RowSpan="2" VerticalAlignment="Bottom"  TextAlignment="Left">
                                                    <Run Text="@"/><Run Text="{Binding UniqueName}"/>

                                                </TextBlock>
                                            </Grid>
                                        </Border>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>

                            </ListBox>
                            <Button  Grid.Row="4" Margin="10,5" Content="{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.InviteContactDialogButtonAddString, Mode=OneWay}" Command="{Binding InviteContactCommand}"></Button>
                            <Button Grid.Row="4" Grid.Column="1" Margin="10,5" Content="{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.CancelButtonString, Mode=OneWay}" Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}"></Button>

                        </Grid>
                    </materialDesign:DialogHost.DialogContent>
                </materialDesign:DialogHost>
                <!--______________Left part of window______________-->
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition></RowDefinition>

                    </Grid.RowDefinitions>
                    <DockPanel>
                        <Button x:Name="ButtonOpen" HorizontalAlignment="Left" VerticalAlignment="Center" 
                                        Background="{x:Null}" BorderBrush="{x:Null}" Width="40" Height="40" Padding="0"
                                        Command="{x:Static materialDesign:DrawerHost.OpenDrawerCommand}"
                                        CommandParameter="{x:Static Dock.Left}" >
                            <materialDesign:PackIcon Kind="Menu" Foreground="{StaticResource PrimaryHueMidBrush}"  Width="30" Height="30" />
                        </Button>

                        <materialDesign:PackIcon Kind="Magnify" VerticalAlignment="Center" Opacity=".56" RenderTransformOrigin="0.5,0.5" >
                            <materialDesign:PackIcon.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleY="1" ScaleX="-1"/>
                                    <SkewTransform AngleY="0" AngleX="0"/>
                                    <RotateTransform Angle="0"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </materialDesign:PackIcon.RenderTransform>
                        </materialDesign:PackIcon>

                        <TextBox
                         Margin="0,0,10,0"
                         Grid.Column="1"   
                         Text="{Binding SearchChatUniqueName, UpdateSourceTrigger=PropertyChanged}"
                         materialDesign:HintAssist.Hint="{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.SearchString, Mode=OneWay}"
                         materialDesign:TextFieldAssist.HasClearButton="True"                                  
                         VerticalAlignment="Center" />

                    </DockPanel>

                    <!--List of chats-->
                    <ListBox Grid.Row="1" ItemsSource="{Binding Chats}" SelectedItem="{Binding SelectedChat,UpdateSourceTrigger=PropertyChanged}" >
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Border >
                                    <Grid >
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                                            <ColumnDefinition></ColumnDefinition>

                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>


                                            <RowDefinition></RowDefinition>
                                            <RowDefinition></RowDefinition>
                                            <RowDefinition></RowDefinition>
                                            <RowDefinition></RowDefinition>

                                            <RowDefinition></RowDefinition>
                                            <RowDefinition></RowDefinition>


                                        </Grid.RowDefinitions>
                                        <Ellipse Width="50" Height="50" Margin="15,0" Grid.RowSpan="4" Grid.Row="1">
                                            <Ellipse.Fill>
                                                <ImageBrush ImageSource="{Binding Photo}" Stretch="UniformToFill"/>
                                            </Ellipse.Fill>
                                        </Ellipse>

                                        <TextBlock Grid.Column="1" FontWeight="Bold" Grid.RowSpan="3" FontSize="16" Margin="5,0"  TextWrapping="Wrap" VerticalAlignment="Bottom" Text="{Binding Name,UpdateSourceTrigger=PropertyChanged}"></TextBlock>
                                        <TextBlock Grid.Column="1" Grid.Row="3" Margin="5,0" Grid.RowSpan="2" FontSize="13" VerticalAlignment="Bottom" TextWrapping="Wrap" HorizontalAlignment="Left">
                                        <Run Text="@"></Run><Run Text="{Binding UniqueName,UpdateSourceTrigger=PropertyChanged}"></Run>
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsPM}" Value="True">
                                                            <Setter Property="Visibility" Value="Hidden"></Setter>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                    </Grid>
                                </Border>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Grid>
                <!--______________Right part of window______________-->
                <Grid  Grid.Column="2" >
                    <Grid.Style>
                        <Style TargetType="Grid">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsChatSelected}" Value="True">
                                    <Setter Property="Visibility" Value="Visible"></Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsChatSelected}" Value="False">
                                    <Setter Property="Visibility" Value="Hidden"></Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition ></RowDefinition>
                        <RowDefinition Height="Auto"/>

                    </Grid.RowDefinitions>

                    <Border MinHeight="40" Background="{StaticResource PrimaryHueMidBrush}" TextBlock.Foreground="{StaticResource MaterialDesignBackground}" Margin="0,0,0,5">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition></RowDefinition>
                                <RowDefinition ></RowDefinition>

                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                <ColumnDefinition></ColumnDefinition>
                                <ColumnDefinition Width="Auto" MinWidth="25"></ColumnDefinition>

                            </Grid.ColumnDefinitions>

                            <TextBlock FontWeight="SemiBold" Grid.ColumnSpan="2" FontSize="14"  Margin="5,0"  TextWrapping="Wrap" HorizontalAlignment="Left" VerticalAlignment="Bottom" Text="{Binding SelectedChat.Name}"></TextBlock>
                            <TextBlock Grid.Row="1"   FontSize="13" Margin="5,2"   TextAlignment="Center" TextWrapping="Wrap" HorizontalAlignment="Left" VerticalAlignment="Bottom" >
                                <Run Text="{Binding CountMembers,UpdateSourceTrigger=PropertyChanged}"></Run> <Run Text="{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.MembersString, Mode=OneWay}"></Run>
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding SelectedChat.IsPM}" Value="True">
                                                <Setter Property="Visibility" Value="Hidden"></Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>


                            <!--Chat menu-->
                            <materialDesign:PopupBox Grid.Column="2" Grid.RowSpan="2" VerticalAlignment="Top"  Margin="0,10,0,0" 
                            Style="{StaticResource MaterialDesignToolForegroundPopupBox}"   PopupHorizontalOffset="80" 
                              Padding="2">
                                <StackPanel Width="180">
                                    <!--Profile info button-->
                                    <Button  Content="{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.ViewProfileButtonString, Mode=OneWay}" Command="{Binding ProfileInfoDialogOpenCommand, UpdateSourceTrigger=PropertyChanged}">
                                        <Button.Style>
                                            <Style BasedOn="{StaticResource MaterialDesignPopupBoxButton}" TargetType="Button">
                                                <Style.Triggers>
                                                    <DataTrigger  Binding="{Binding SelectedChat.IsPM}" Value="True">
                                                        <Setter Property="Visibility" Value="Visible"></Setter>
                                                    </DataTrigger>
                                                    <DataTrigger  Binding="{Binding SelectedChat.IsPM}" Value="False">
                                                        <Setter Property="Visibility" Value="Collapsed"></Setter>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                    <!--Chat info dialog-->
                                    <Button Content="{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.ViewChatInfoButtonString, Mode=OneWay}" Command="{Binding ChatInfoDialogOpenCommand}">
                                        <Button.Style>
                                            <Style BasedOn="{StaticResource MaterialDesignPopupBoxButton}" TargetType="Button">
                                                <Style.Triggers>
                                                    <DataTrigger  Binding="{Binding SelectedChat.IsPM}" Value="False">
                                                        <Setter Property="Visibility" Value="Visible"></Setter>
                                                    </DataTrigger>
                                                    <DataTrigger  Binding="{Binding SelectedChat.IsPM}" Value="True">
                                                        <Setter Property="Visibility" Value="Collapsed"></Setter>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                    <!--Manage chat button-->
                                    <Button Content="{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.ManageChatButtonString, Mode=OneWay}" Command="{Binding ManageChatDialogOpenCommand}">
                                        <Button.Style>
                                            <Style BasedOn="{StaticResource MaterialDesignPopupBoxButton}" TargetType="Button">
                                                <Style.Triggers>
                                                    <DataTrigger  Binding="{Binding SelectedChat.IsPM}" Value="False">
                                                        <Setter Property="Visibility" Value="Visible"></Setter>
                                                    </DataTrigger>
                                                    <DataTrigger  Binding="{Binding SelectedChat.IsPM}" Value="True">
                                                        <Setter Property="Visibility" Value="Collapsed"></Setter>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                    <!--Leave from chat button-->
                                    <Button Content="{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.LeaveTheChatButtonString, Mode=OneWay}" Command="{Binding LeaveFromChatCommand}" >
                                        <Button.Style>
                                            <Style BasedOn="{StaticResource MaterialDesignPopupBoxButton}" TargetType="Button">
                                                <Style.Triggers>
                                                    <DataTrigger  Binding="{Binding SelectedChat.IsPM}" Value="False">
                                                        <Setter Property="Visibility" Value="Visible"></Setter>
                                                    </DataTrigger>
                                                    <DataTrigger  Binding="{Binding SelectedChat.IsPM}" Value="True">
                                                        <Setter Property="Visibility" Value="Collapsed"></Setter>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                    <!--Delete chat button-->
                                    <Button Content="{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.DeleteChatButtonString, Mode=OneWay}" Command="{Binding DeleteChatCommand}" >
                                        <Button.Style>
                                            <Style BasedOn="{StaticResource MaterialDesignPopupBoxButton}" TargetType="Button">
                                                <Style.Triggers>
                                                    <DataTrigger  Binding="{Binding SelectedChat.IsPM}" Value="False">
                                                        <Setter Property="Visibility" Value="Visible"></Setter>
                                                    </DataTrigger>
                                                    <DataTrigger  Binding="{Binding SelectedChat.IsPM}" Value="True">
                                                        <Setter Property="Visibility" Value="Collapsed"></Setter>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                    <!--Add members button-->
                                    <Button Content="{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.InviteMembersButtonString, Mode=OneWay}" Command="{Binding InviteContactsDialogOpenCommand}" >
                                        <Button.Style>
                                            <Style BasedOn="{StaticResource MaterialDesignPopupBoxButton}" TargetType="Button">
                                                <Style.Triggers>
                                                    <DataTrigger  Binding="{Binding SelectedChat.IsPM}" Value="False">
                                                        <Setter Property="Visibility" Value="Visible"></Setter>
                                                    </DataTrigger>
                                                    <DataTrigger  Binding="{Binding SelectedChat.IsPM}" Value="True">
                                                        <Setter Property="Visibility" Value="Collapsed"></Setter>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                </StackPanel>
                            </materialDesign:PopupBox>
                        </Grid>
                    </Border>
                    <!--Chat Messages-->
                    <ListBox Grid.Row="1"  ScrollViewer.VerticalScrollBarVisibility="Hidden" ItemsSource="{Binding ChatMessages}" HorizontalContentAlignment="Stretch" SelectedItem="{Binding SelectedMessage,UpdateSourceTrigger=PropertyChanged}"  >
                        <ListBox.ItemTemplate>
                            <DataTemplate >
                                <Grid Width="auto">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="60"></ColumnDefinition>
                                        <ColumnDefinition ></ColumnDefinition>
                                        <ColumnDefinition Width="60"></ColumnDefinition>

                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>

                                        <RowDefinition></RowDefinition>
                                        <RowDefinition></RowDefinition>
                                        <RowDefinition></RowDefinition>
                                        <RowDefinition></RowDefinition>
                                        <RowDefinition></RowDefinition>

                                    </Grid.RowDefinitions>
                                    <Ellipse Width="35" Height="35" Margin="10,0" Grid.RowSpan="4" Grid.Row="1" VerticalAlignment="Bottom">
                                        <Ellipse.Fill>
                                            <ImageBrush ImageSource="{Binding Client.Photo}" Stretch="UniformToFill"/>
                                        </Ellipse.Fill>
                                        <Ellipse.Style>
                                            <Style>
                                                <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsMyMessage}"  Value="True">
                                                <Setter Property="Grid.Column" Value="3"></Setter>
                                                </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                            
                                        </Ellipse.Style>
                                    </Ellipse>
                                    <Border Grid.Column="1" Grid.Row="2" Grid.RowSpan="3"  VerticalAlignment="Bottom" CornerRadius="5" MaxWidth="270" MinWidth="100"  Background="{StaticResource PrimaryHueDarkBrush}">
                                        <Border.Style>
                                            <Style TargetType="Border">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsMyMessage}"  Value="True">
                                                        <Setter Property="HorizontalAlignment" Value="Right"></Setter>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding IsMyMessage}"  Value="False">
                                                        <Setter Property="HorizontalAlignment" Value="Left"></Setter>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>

                                        </Border.Style>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition/>
                                                <ColumnDefinition/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition></RowDefinition>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                            </Grid.RowDefinitions>
                                            <TextBlock Margin="5,5,5,0" Foreground="#FFFFB773" Text="{Binding Client.Name}"></TextBlock>
                                            <TextBlock Margin="5,5,5,0" Grid.Column="1" Foreground="#FFFFB773" Text="{Binding SendingTime,StringFormat=HH:mm}"></TextBlock>
                                            <TextBlock Grid.Row="1" Margin="5" TextWrapping="Wrap" Foreground="White" Text="{Binding Text}"></TextBlock>
                                        </Grid>
                                    </Border>
                                </Grid>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>

                    <Border Grid.Row="2" MaxHeight="150" Background="{StaticResource PrimaryHueMidBrush}" MinHeight="40" TextBlock.Foreground="{StaticResource MaterialDesignBackground}" >
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"></RowDefinition>
                                <RowDefinition ></RowDefinition>

                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                <ColumnDefinition></ColumnDefinition>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>

                            </Grid.ColumnDefinitions>

                            <materialDesign:PopupBox  Grid.RowSpan="2"     PlacementMode="TopAndAlignLeftEdges" 
                                                      PopupHorizontalOffset="1" PopupVerticalOffset="11" VerticalAlignment="Bottom"
                             Style="{StaticResource MaterialDesignToolForegroundPopupBox}" 
                             Padding="2" Margin="0,0,0,5" >
                                <materialDesign:PopupBox.ToggleContent>
                                    <materialDesign:PackIcon Kind="Menu" Foreground="{StaticResource MaterialDesignPaper}" Height="30" Width="30" />
                                </materialDesign:PopupBox.ToggleContent>
                                <StackPanel Width="auto">
                                    <Button Content="{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.DeleteMessageForAllButtonString, Mode=OneWay}"  Command="{Binding DeleteMessageForAllCommand, UpdateSourceTrigger=PropertyChanged}"  >
                                    </Button>
                                    <Button Content="{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.CopyMessageButtonString, Mode=OneWay}"  Command="{Binding CopyMessageCommand, UpdateSourceTrigger=PropertyChanged}"  >
                                    </Button>
                                    <Button Content="{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.CopyTextMessageButtonString, Mode=OneWay}"  Command="{Binding CopyTextMessageCommand, UpdateSourceTrigger=PropertyChanged}"  >
                                    </Button>
                                </StackPanel>
                            </materialDesign:PopupBox>


                           

                            <materialDesign:PackIcon  VerticalAlignment="Bottom" Margin="5,5" Grid.Column="2" Grid.RowSpan="2" Foreground="{StaticResource MaterialDesignPaper}" Height="30" Width="30" 
                               Kind="Send">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseDown">
                                        <i:InvokeCommandAction Command="{Binding SendMessageCommand}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </materialDesign:PackIcon>
                            <TextBox VerticalScrollBarVisibility="Hidden" AcceptsReturn="True" Grid.Column="1" VerticalAlignment="Center" Margin="5,0" Grid.RowSpan="2" TextWrapping="Wrap" CaretBrush="White" BorderBrush="{StaticResource PrimaryHueMidBrush}" materialDesign:HintAssist.Hint="{Binding Source={x:Static res:ResourceService.Current}, Path=Resources.WriteMessageString, Mode=OneWay}"  Text="{Binding TextMessage,UpdateSourceTrigger=PropertyChanged}"></TextBox>
                        </Grid>
                    </Border>
                </Grid>

            </Grid>
        </materialDesign:DrawerHost>
    </Grid>

</Window>
